AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id

  Subnet1Id:
    Type: AWS::EC2::Subnet::Id

  Subnet2Id:
    Type: AWS::EC2::Subnet::Id

  CidrIp1:
    Type: String

  CidrIp2:
    Type: String

  CidrIp3:
    Type: String
  
  CidrIp4:
    Type: String

  InstanceIpAddress1:
    Type: String

  InstanceIpAddress2:
    Type: String
  
  TagApplicationName:
    Type: String
 
  TagApplicationOwner:
    Type: String
 
  TagCriticality:
    Type: String

  Certificate:
    Type: String

Resources:
  AlbSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for the ALB
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Ref CidrIp1
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Ref CidrIp2
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Ref CidrIp3
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Ref CidrIp4

  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: ALB
      Subnets:
        - !Ref Subnet1Id
        - !Ref Subnet2Id
      Scheme: internal
      SecurityGroups:
        - !Ref AlbSecurityGroup
      Tags:
        - Key: TagApplicationName
          Value: !Ref TagApplicationName
        - Key: TagApplicationOwner
          Value: !Ref TagApplicationOwner
        - Key: TagCriticality
          Value: !Ref TagCriticality

  ListenerHTTPS:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      Certificates:
        - !Ref Certificate
      LoadBalancerArn: !Ref ALB
      Port: 443
      Protocol: HTTPS

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: TargetGroup
      Port: 443
      Protocol: HTTPS
      VpcId: !Ref VpcId
      TargetType: 'ip'
      Targets:
        - Id: !Ref InstanceIpAddress1
          Port: 443
        - Id: !Ref InstanceIpAddress2
          Port: 443

  WebACL:
    Type: AWS::WAFv2::WebACL
    Properties:
      Name: Testing
      Scope: REGIONAL
      DefaultAction:
        Allow: {}
      Description: WebACL for Admin Protection, Core Rule Set, Known Bad Inputs, Linux OS, and PHP Application
      VisibilityConfig:
        SampledRequestsEnabled: true
        CloudWatchMetricsEnabled: true
        MetricName: exampleWebACL
      Rules:
        - Name: AdminProtection
          OverrideAction:
            Count: {}
          Priority: 1
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesAdminProtectionRuleSet
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: AWSManagedRulesAdminProtectionRuleSet
        - Name: CoreRuleSet
          OverrideAction:
            Count: {}
          Priority: 2
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesCommonRuleSet
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: AWSManagedRulesCommonRuleSet
        - Name: KnownBadInputs
          OverrideAction:
            Count: {}
          Priority: 3
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesKnownBadInputsRuleSet
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: AWSManagedRulesKnownBadInputsRuleSet
        - Name: LinuxOS
          OverrideAction:
            Count: {}
          Priority: 4
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesLinuxRuleSet
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: AWSManagedRulesLinuxRuleSet
        - Name: PHPApplication
          OverrideAction:
            Count: {}
          Priority: 5
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesPHPRuleSet
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: AWSManagedRulesPHPRuleSet

  WebACLAssociation:
    Type: AWS::WAFv2::WebACLAssociation
    Properties:
      WebACLArn: !GetAtt WebACL.Arn
      ResourceArn: arn:aws:elasticloadbalancing:eu-central-1:294733675736:loadbalancer/app/Testing-ALB/df01a8dacdf87dc5

Outputs:
  WebACLId:
    Description: WebACL Id
    Value: !Ref WebACL
